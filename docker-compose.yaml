services:
  redis:
    image: redis:6-alpine
    restart: unless-stopped
    container_name: redis
    volumes:
      - redis_data:/data

  api:
    build: .
    image: my-app:latest
    command: bash -c "python store.py api"
    restart: unless-stopped
    container_name: api-service
    depends_on:
      - redis
    env_file:
      - .common.env
    ports:
      - '8000:8000'

  bot:
    build: .
    image: my-app:latest
    command: bash -c "python store.py bot"
    restart: unless-stopped
    container_name: bot-service
    depends_on:
      - redis
      - api
    env_file:
      - .common.env

  collections:
    build: .
    image: my-app:latest
    command: bash -c "python store.py save-kp-collections"
    restart: unless-stopped
    container_name: collections-service
    depends_on:
      - redis
      - api
    env_file:
      - .common.env
    networks:
      - store

  items:
    build: .
    image: my-app:latest
    command: bash -c "python store.py save-kp-series"
    restart: unless-stopped
    container_name: items-service
    depends_on:
      - redis
      - api
    env_file:
      - .common.env

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - /var/www/one-more-episode.ru:/var/www/one-more-episode.ru:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - api

volumes:
  redis_data:
